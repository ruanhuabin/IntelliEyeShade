package action;

import java.util.List;

import org.apache.struts2.interceptor.validation.SkipValidation;

import service.AdministratorDAO;
import service.TestInfoDAO;
import service.UsersDAO;
import serviceimpl.AdministratorDAOImpl;
import serviceimpl.TestInfoDAOImpl;
import serviceimpl.UsersDAOImpl;
import static util.IntelliEyeShadeLogger.logger;


import com.opensymphony.xwork2.ModelDriven;

import entity.Administrator;
import entity.StatisticsInfo;
import entity.TestInfo;
import entity.Users;

public class StatisticsAction extends SuperAction {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	public String query()
	{
		String startTime = request.getParameter("starttime");
		String endTime = request.getParameter("endtime");
		
		logger.info("startTime = " + startTime);
		logger.info("endTime = " + endTime);
		
		
		UsersDAOImpl userDAO = new UsersDAOImpl();
		
		String hql = "from Users as u where u.registerDate >= '" + startTime + "' and u.registerDate <= '" + endTime + "'";
		int totalUsers = userDAO.getAllRowCount(hql);
		
		List<Users> list = userDAO.queryByHQL(hql);
		
		StatisticsInfo si = new StatisticsInfo();
		si.setTotalUsers(totalUsers);
		
		int totalTestTimes = 0;
		for(Users user: list)
		{
			totalTestTimes += user.getTestTimes();
		}
		
		si.setTotalTestTimes(totalTestTimes);
		
		
		//获取单用户使用情况信息
		TestInfoDAO tisDAO = new TestInfoDAOImpl();
		int totalUsedDuration = 0;
		
		for(Users user: list)
		{
			String uid = user.getUid();
			 
			String hql2 = "from TestInfo as ti where ti.uid = '" + uid + "'";
			List<TestInfo> tis = tisDAO.queryByHQL(hql2);
			logger.info("tis = " + tis);
			
			for(TestInfo ti: tis)
			{
				totalUsedDuration += ti.getTimeDuration();
			}
			
		}
		int avgUsedDuration = (totalUsers == 0) ? 0: totalUsedDuration / totalUsers;
		int avgTestTimes = (totalTestTimes == 0) ? 0: totalTestTimes / totalUsers;
		si.setAvgUsedDuration(avgUsedDuration);
		si.setAvgUsedTimes(avgTestTimes);
		
		
		//用户性别以及使用时长统计
		
		int totalMaleNum = 0;
		int totalFemaleNum = 0;
		float maleRatio = 0.0f;
		float femaleRatio = 0.0f
		for(Users user: list)
		{
			String gender = user.getGender();
			
			if(gender.equals("男"))
			{
				totalMaleNum ++;
				
			}
			else if(gender.equals("女"))
			{
				totalFemaleNum ++;
			}
				
			
			
		}
		
		
		request.setAttribute("statisticsinfo", si);
		
		logger.info("statisticsinfo = " + si);
		
		
		return "statistics_query_success";
	}
	
	
	
}
